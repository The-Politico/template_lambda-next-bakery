{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport './index.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nfunction _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar styles = {\n  \"styles\": \"politico_style_sketch___3XFzRXmpE8\",\n  \"spinAround\": \"politico_style_sketch___1lF8tc-HJf\"\n};\n\nvar Text = function Text(props) {\n  var inputProps = _Object$assign({}, props);\n\n  delete inputProps.help;\n  delete inputProps.label;\n  delete inputProps.wrapperClassName;\n  delete inputProps.error;\n  return React.createElement(\"div\", {\n    id: \"container-\".concat(props.id),\n    className: classnames('field', props.wrapperClassName, styles.styles)\n  }, props.label.length > 0 && React.createElement(\"label\", {\n    className: \"label\",\n    id: \"label-\".concat(props.id),\n    htmlFor: props.id\n  }, props.label), React.createElement(\"div\", {\n    className: classnames('control', {\n      error: props.error\n    })\n  }, props.type === 'textarea' && React.createElement(\"textarea\", _extends({}, inputProps, {\n    className: classnames(props.className, 'input')\n  })), props.type !== 'textarea' && React.createElement(\"input\", _extends({}, inputProps, {\n    className: classnames(props.className, 'input')\n  }))), props.help.length > 0 && React.createElement(\"p\", {\n    id: \"help-\".concat(props.id),\n    className: classnames('help', {\n      error: props.error\n    })\n  }, props.help));\n};\n\nText.defaultProps = {\n  id: '',\n  className: '',\n  wrapperClassName: '',\n  help: '',\n  label: '',\n  value: '',\n  error: false\n};\nText.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  wrapperClassName: PropTypes.string,\n  help: PropTypes.string,\n  error: PropTypes.bool,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'email', 'month', 'number', 'password', 'search', 'tel', 'text', 'textarea', 'time', 'url', 'week']),\n  autocomplete: PropTypes.oneOf(['on', 'off']),\n  autofocus: PropTypes.bool,\n  cols: PropTypes.number,\n  disabled: PropTypes.bool,\n  max: PropTypes.string,\n  maxlength: PropTypes.number,\n  min: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  pattern: PropTypes.string,\n  placeholder: PropTypes.string,\n  readonly: PropTypes.bool,\n  required: PropTypes.bool,\n  rows: PropTypes.number,\n  size: PropTypes.number,\n  step: PropTypes.number,\n  wrap: PropTypes.oneOf(['hard', 'soft'])\n};\nexport default Text;","map":null,"metadata":{},"sourceType":"module"}